---
- name: Prerequisite checks
  hosts: localhost
  connection: local
  gather_facts: no
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  tasks:
  - name: Get public IP address of OpenStack instance
    ceradmin.openstack.get_instance_details:
      instance_id: "{{ instance_id }}"
    register: instance_details

  - name: Check if we got a public IP address
    fail:
      msg: "VM does not appear to have a public address"
    when: instance_details.public_ip is not match("^130\.216\.\d{1,3}\.\d{1,3}$")

  - name: Create temporary host group with single IP
    add_host:
      hostname: "{{ instance_details.public_ip }}"
      groupname: tmp_group

- name: Setup and configure management account
  hosts: tmp_group,!localhost
  gather_facts: no
  vars:
    ansible_user: "{{ default_user }}"
  become: true
  tasks:
  - name: Verify basic accessibility
    action: ping

  - name: Set up account 
    user:
      name: "{{ management_user }}"
      comment: Security-related account set up by the Centre for eResearch. Please do not delete
      create_home: yes
      shell: /bin/bash
      expires: -1

  - name: Add public key to authorized_keys file
    ansible.posix.authorized_key:
      user: "{{ management_user }}"
      state: present
      key: "{{ management_user_public_key }}"

  - name: Allow management user to have passwordless sudo
    lineinfile:
      dest: /etc/sudoers
      state: present
      regexp: "^{{ management_user }}"
      line: "{{ management_user }} ALL=(ALL) NOPASSWD: ALL"
      validate: "visudo -cf %s"

- name: Tag OpenStack VM 
  hosts: localhost
  connection: local
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  gather_facts: no
  tasks:
  - name: Setting tag management_account_configured
    ceradmin.openstack.set_instance_tag:
      instance_id: "{{ instance_id }}"
      tag: management_account_configured

- name: Disable configured SSH access for default user account for our SSH key
  hosts: tmp_group,!localhost
  gather_facts: no
  become: true
  tasks:
  - name: Verify basic accessibility
    action: ping

  - name: Remove public key to authorized_keys file
    ansible.posix.authorized_key:
      user: "{{ default_user }}"
      state: absent
      key: "{{ management_user_public_key }}"
